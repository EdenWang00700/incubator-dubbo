<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <!--声明项目遵循的pom版本模型-->
    <modelVersion>4.0.0</modelVersion>

<!--父项目坐标-->
    <parent>
        <groupId>org.apache</groupId>
        <artifactId>apache</artifactId>
        <version>19</version>
    </parent>

    <groupId>org.apache.dubbo</groupId>
    <artifactId>dubbo-parent</artifactId>
    <version>2.7.0-SNAPSHOT</version>

    <!--packageing标签标识项目的生产构建类型-->
    <!--标识这个父项目不像之前的项目那样创建一
    个JAR 或者一个WAR，它仅仅是一个引用其它Maven 项目的POM。-->
    <packaging>pom</packaging>

    <!--项目名称-->
    <name>${project.artifactId}</name>
    <!--&lt;!&ndash;项目介绍-->
    <description>The parent project of dubbo</description>
    <!--地址-->
    <url>https://github.com/apache/incubator-dubbo</url>
    <!--成立时间-->
    <inceptionYear>2011</inceptionYear>
    <!--许可证-->
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <!--scm标签source control management允许你配置你的代码库, 供maven web站点和其他插件使用-->
    <scm>
        <url>https://github.com/apache/incubator-dubbo</url>
        <connection>scm:git:https://github.com/apache/incubator-dubbo.git</connection>
        <developerConnection>scm:git:https://github.com/apache/incubator-dubbo.git</developerConnection>
      <tag>HEAD</tag>
  </scm>
    <!--项目邮件列表信息-->
    <mailingLists>
        <!--项目相关的邮件列表.自动产生的网站引用这些信息-->
        <mailingList>
            <name>Development List</name>
            <!--订阅邮件的地址或链接,如果是邮件地址,创建文档是, mailto链接会被自动创建-->
            <subscribe>dev-subscribe@dubbo.apache.org</subscribe>
            <unsubscribe>dev-unsubscribe@dubbo.apache.org</unsubscribe>
            <post>dev@dubbo.apache.org</post>
        </mailingList>
        <mailingList>
            <name>Commits List</name>
            <subscribe>commits-subscribe@dubbo.apache.org</subscribe>
            <unsubscribe>commits-unsubscribe@dubbo.apache.org</unsubscribe>
            <post>commits@dubbo.apache.org</post>
        </mailingList>
        <mailingList>
            <name>Issues List</name>
            <subscribe>issues-subscribe@dubbo.apache.org</subscribe>
            <unsubscribe>issues-unsubscribe@dubbo.apache.org</unsubscribe>
            <post>issues@dubbo.apache.org</post>
        </mailingList>
    </mailingLists>
    <!--项目开发者列表-->
    <developers>
        <developer>
            <id>dubbo.io</id>
            <name>The Dubbo Project Contributors</name>
            <email>dev-subscribe@dubbo.apache.org</email>
            <url>http://dubbo.apache.org/</url>
        </developer>
    </developers>

    <organization>
        <name>The Apache Software Foundation</name>
        <url>http://www.apache.org/</url>
    </organization>
<!--项目问题管理系统-->
    <issueManagement>
        <system>Github Issues</system>
        <url>https://github.com/apache/incubator-dubbo/issues</url>
    </issueManagement>
<!--项目版本配置配置, 以值替代名称, 可以在整个pom文件中使用, 业可以作为触发条件, 格式<name>value</name>-->
    <properties>
        <!-- Test libs -->
        <junit_version>4.12</junit_version>
        <hazelcast_version>3.9-EA</hazelcast_version>
        <hamcrest_version>1.3</hamcrest_version>
        <hibernate_validator_version>5.2.4.Final</hibernate_validator_version>
        <el_api_version>2.2.4</el_api_version>
        <jaxb_api_version>2.2.7</jaxb_api_version>
        <cglib_version>2.2</cglib_version>
        <mockito_version>2.18.3</mockito_version>
        <!-- Build args -->
        <argline>-server -Xms256m -Xmx512m -XX:PermSize=64m -XX:MaxPermSize=128m -Dfile.encoding=UTF-8
            -Djava.net.preferIPv4Stack=true
        </argline>
        <skip_maven_deploy>false</skip_maven_deploy>
        <updateReleaseInfo>true</updateReleaseInfo>
        <project.build.sourceEncoding>${file_encoding}</project.build.sourceEncoding>

        <profile.name>oss</profile.name>
        <!-- for maven compiler plugin -->
        <java_source_version>1.8</java_source_version>
        <java_target_version>1.8</java_target_version>
        <file_encoding>UTF-8</file_encoding>
        <!-- Maven plugins -->
        <maven_jar_version>3.0.2</maven_jar_version>
        <maven_surefire_version>2.19.1</maven_surefire_version>
        <maven_deploy_version>2.8.2</maven_deploy_version>
        <maven_compiler_version>3.6.0</maven_compiler_version>
        <maven_source_version>3.0.1</maven_source_version>
        <maven_javadoc_version>3.0.1</maven_javadoc_version>
        <maven_jetty_version>6.1.26</maven_jetty_version>
        <maven_checkstyle_version>3.0.0</maven_checkstyle_version>
        <maven_jacoco_version>0.8.1</maven_jacoco_version>
        <apache-rat-plugin.version>0.12</apache-rat-plugin.version>
        <arguments />
        <checkstyle.skip>true</checkstyle.skip>
        <rat.skip>true</rat.skip>
    </properties>

    <!--模块,及项目的子项目,被构建成项目的一部分,
    列出的每个模块元素是指向该模块pom文件的目录的相对路径,
    通过子项目的<artifactId></artifactId>标识-->
    <modules>
        <module>dubbo-common</module>
        <module>dubbo-container</module>
        <module>dubbo-remoting</module>
        <module>dubbo-rpc</module>
        <module>dubbo-filter</module>
        <module>dubbo-cluster</module>
        <module>dubbo-registry</module>
        <module>dubbo-monitor</module>
        <module>dubbo-config</module>
        <module>dubbo-demo</module>
        <module>dubbo-plugin</module>
        <module>dubbo-serialization</module>
        <module>dubbo-bootstrap</module>
        <module>dubbo-compatible</module>
        <module>dependencies-bom</module>
        <module>bom</module>
        <module>all</module>
        <module>distribution</module>
        <module>dubbo-metrics</module>
    </modules>
<!--继承自该项目的所有子项目的默认依赖, 这部分的依赖信息不会被解析,
而是当子项目申城一个一个依赖时, 注意这里说的是子项目, 不是子项目的子项目
, 所以当子项目的子项目要是用依赖时需要在子项目中写dependencyManagement-->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-dependencies-bom</artifactId>
                <version>2.7.0-SNAPSHOT</version>
                <!--依赖类型, 默认是jar.通常标识依赖文件的扩展名-->
                <type>pom</type>
                <!--依赖范围， 在决定在项目关键中哪些构建会被包括进来-->
                <!--compile：默认， 用于编译-->
                <!--provided： 类似编译， 支持JDK或容器提供-->
                <!--runtime： 在执行是需要使用-->
                <!--test： 在test时使用-->
                <!--optional： 当项目自身被依赖时， 标注依赖是否传递， 用于连续时使用 -->
                <!--import：你可以把dependencyManagement放到单独的专门用来管理依赖的pom中，
                然后在需要使用依赖的模块中通过import scope依赖，就可以引入dependencyManagement。
                例如可以写这样一个用于依赖管理的pom。import scope只能用在dependencyManagement里面-->
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit_version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>${hamcrest_version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito_version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib-nodep</artifactId>
            <version>${cglib_version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!--列出所有的项目构建profile, 如果被激活,会修改构建处理-->
    <profiles>
        <!--根据环境参数或命令行参数激活某个构建处理-->
        <profile>
            <!--构建配置的唯一标识符, 即用于命令行激活,也用于继承时合并具有相同标识符的profile-->
            <id>java6</id>

            <!--以值替代名称,整个项目中都可以用-->
            <properties>
                <maven_jar_version>3.0.2</maven_jar_version>
                <maven_surefire_version>2.19.1</maven_surefire_version>
                <maven_deploy_version>2.7</maven_deploy_version>
                <maven_compiler_version>3.1</maven_compiler_version>
                <maven_source_version>3.0.1</maven_source_version>
                <maven_javadoc_version>2.10.1</maven_javadoc_version>
            </properties>
        </profile>

        <profile>
            <id>test</id>
            <!--自动触发profile的条件逻辑.activation是profile的开启钥匙-->
            <activation>
                <!--提供一个文件名,通过检测该文件是否存在来激活profile.missing检查该文件是否存在, 如果不存在则激活profile,
                 exist用于检测文件是否存在,如果存在则激活profile-->
                <file>
                    <exists></exists>
                    <missing>.project</missing>
                </file>
            </activation>
            <!--模块,被构建成项目的一部分, 列出每个模块元素是指向该模块目录的相对路径-->
            <modules>
                <module>dubbo-test</module>
            </modules>
        </profile>
        <profile>
            <id>hudson</id>
            <build>
                <!--使用插件列表-->
                <plugins>
                    <!--plugin元素包含描述插件所需要的信息-->
                    <plugin>
                        <!--插件在仓库的groupId -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <!--插件在仓库的artifactID-->
                        <artifactId>maven-surefire-plugin</artifactId>
                        <!--作为DOM文件配置-->
                        <configuration>
                            <testFailureIgnore>true</testFailureIgnore>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>java8-vm-args</id>
            <activation>
                <!--当匹配的讲课被检测到时, profile被激活-->
                <jdk>[1.8,)</jdk>
            </activation>
            <properties>
                <!-- Build args -->
                <!-- if you run dubbo on java8+,please use these vm args -->
                <argline>-server -Xms256m -Xmx512m -XX:MetaspaceSize=64m -XX:MaxMetaspaceSize=128m -Dfile.encoding=UTF-8
                    -Djava.net.preferIPv4Stack=true
                </argline>
            </properties>
        </profile>
        <profile>
            <id>checkstyle</id>
            <activation>
                <jdk>[1.8,)</jdk>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <version>${maven_checkstyle_version}</version>
                        <dependencies>
                            <dependency>
                                <groupId>com.puppycrawl.tools</groupId>
                                <artifactId>checkstyle</artifactId>
                                <version>8.9</version>
                            </dependency>
                        </dependencies>
                        <!--在项目构建生命周期执行的一组目标配置, 每个目标可能有不同的配置-->
                        <executions>
                            <!--包含插件执行所需要的信息-->
                            <execution>
                                <id>checkstyle-validation</id>
                                <phase>validate</phase>
                                <configuration>
                                    <configLocation>codestyle/checkstyle.xml</configLocation>
                                    <suppressionsLocation>codestyle/checkstyle-suppressions.xml</suppressionsLocation>
                                    <headerLocation>codestyle/checkstyle-header.txt</headerLocation>
                                    <encoding>UTF-8</encoding>
                                    <consoleOutput>true</consoleOutput>
                                    <failOnViolation>true</failOnViolation>
                                </configuration>
                                <!--配置的执行目标-->
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>release</id>
            <!--构建项目需要的信息-->
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>${maven_javadoc_version}</version>
                        <executions>
                            <execution>
                                <id>attach-javadoc</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                                <configuration>
                                    <doclint>none</doclint>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <show>public</show>
                            <charset>UTF-8</charset>
                            <encoding>UTF-8</encoding>
                            <docencoding>UTF-8</docencoding>
                            <links>
                                <link>http://docs.oracle.com/javase/7/docs/api</link>
                            </links>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <!-- Used for packaging NOTICE & LICENSE to each sub-module jar-->
        <!--项目的所有资源路径-->
        <resources>
            <!--项目相关资源路径-->
            <resource>
                <directory>src/main/resources/</directory>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>../</directory>
                <targetPath>META-INF/</targetPath>
                <filtering>false</filtering>
                <includes>
                    <include>NOTICE</include>
                    <include>LICENSE</include>
                </includes>
            </resource>
            <resource>
                <directory>../../</directory>
                <targetPath>META-INF/</targetPath>
                <filtering>false</filtering>
                <includes>
                    <include>NOTICE</include>
                    <include>LICENSE</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven_source_version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven_jar_version}</version>
                <configuration>
                    <archive>
                        <addMavenDescriptor>true</addMavenDescriptor>
                        <index>true</index>
                        <manifest>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                        <manifestEntries>
                            <Specification-Version>${project.version}</Specification-Version>
                            <Implementation-Version>${project.version}</Implementation-Version>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven_surefire_version}</version>
                <configuration>
                    <useSystemClassLoader>true</useSystemClassLoader>
                    <forkMode>once</forkMode>
                    <argLine>${argline} ${jacocoArgLine}</argLine>
                    <systemProperties>
                        <!-- common shared -->
                        <property>
                            <name>transporter</name>
                            <value>${transporter}</value>
                        </property>
                        <property>
                            <name>serialization</name>
                            <value>${serialization}</value>
                        </property>
                        <!-- server side -->
                        <property>
                            <name>port</name>
                            <value>${port}</value>
                        </property>
                        <property>
                            <name>threadpool</name>
                            <value>${threadpool}</value>
                        </property>
                        <property>
                            <name>threads</name>
                            <value>${threads}</value>
                        </property>
                        <property>
                            <name>iothreads</name>
                            <value>${iothreads}</value>
                        </property>
                        <!-- client side -->
                        <property>
                            <name>server</name>
                            <value>${server}</value>
                        </property>
                        <property>
                            <name>timeout</name>
                            <value>${timeout}</value>
                        </property>
                        <property>
                            <name>length</name>
                            <value>${length}</value>
                        </property>
                        <property>
                            <name>connections</name>
                            <value>${connections}</value>
                        </property>
                        <property>
                            <name>base</name>
                            <value>${base}</value>
                        </property>
                        <property>
                            <name>concurrent</name>
                            <value>${concurrent}</value>
                        </property>
                        <property>
                            <name>runs</name>
                            <value>${runs}</value>
                        </property>
                        <property>
                            <name>onerror</name>
                            <value>${onerror}</value>
                        </property>
                    </systemProperties>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven_deploy_version}</version>
                <configuration>
                    <skip>${skip_maven_deploy}</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven_compiler_version}</version>
                <configuration>
                    <compilerArgument>-proc:none</compilerArgument>
                    <fork>true</fork>
                    <source>${java_source_version}</source>
                    <target>${java_target_version}</target>
                    <encoding>${file_encoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${maven_jacoco_version}</version>
                <executions>
                    <execution>
                        <id>jacoco-initialize</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <propertyName>jacocoArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>jacoco-site</id>
                        <phase>package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.rat</groupId>
                <artifactId>apache-rat-plugin</artifactId>
                <version>${apache-rat-plugin.version}</version>
                <executions>
                    <execution>
                        <id>verify.rat</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <excludes>
                                <exclude>**/*.versionsBackup</exclude>
                                <exclude>**/.idea/</exclude>
                                <exclude>**/*.iml</exclude>
                                <exclude>**/*.txt</exclude>
                                <exclude>**/*.load</exclude>
                                <exclude>**/*.flex</exclude>
                                <exclude>**/*.fc</exclude>
                                <exclude>**/*.javascript</exclude>
                                <exclude>**/*.properties</exclude>
                                <exclude>**/*.thrift</exclude>
                                <exclude>**/*.sh</exclude>
                                <exclude>**/*.bat</exclude>
                                <exclude>**/*.md</exclude>
                                <exclude>.git/</exclude>
                                <exclude>.gitignore</exclude>
                                <!-- ASF jenkins box puts the Maven repo in our root directory. -->
                                <exclude>.repository/</exclude>
                                <exclude>**/.settings/*</exclude>
                                <exclude>**/.classpath</exclude>
                                <exclude>**/.project</exclude>
                                <exclude>**/target/**</exclude>
                                <exclude>**/*.log</exclude>
                                <exclude>CODE_OF_CONDUCT.md</exclude>
                                <exclude>.codecov.yml</exclude>
                                <exclude>.travis.yml</exclude>
                                <exclude>PULL_REQUEST_TEMPLATE.md</exclude>
                                <exclude>CONTRIBUTING.md</exclude>
                                <exclude>README.md</exclude>
                                <exclude>**/codestyle/*</exclude>
                                <exclude>**/resources/META-INF/**</exclude>
                                <!-- exclude the internal threadlocal files -->
                                <exclude>**/org/apache/dubbo/common/threadlocal/InternalThreadLocal.java</exclude>
                                <exclude>**/org/apache/dubbo/common/threadlocal/InternalThreadLocalMap.java</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.3</version>
                <configuration>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <useReleaseProfile>false</useReleaseProfile>
                    <releaseProfiles>release</releaseProfiles>
                    <goals>deploy</goals>
                    <arguments>${arguments}</arguments>
                </configuration>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <!-- keep surefire and failsafe in sync -->
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.19.1</version>
                </plugin>
                <!-- keep surefire and failsafe in sync -->
                <plugin>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>2.19.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <groupId>org.ops4j.pax.exam</groupId>
                    <artifactId>maven-paxexam-plugin</artifactId>
                    <version>1.2.4</version>
                </plugin>
                <plugin>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>2.10</version>
                </plugin>
                <plugin>
                    <!-- Do NOT upgrade -->
                    <artifactId>maven-jxr-plugin</artifactId>
                    <version>2.2</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>1.10</version>
                </plugin>
                <plugin>
                    <groupId>org.fusesource.hawtjni</groupId>
                    <artifactId>maven-hawtjni-plugin</artifactId>
                    <version>1.14</version>
                </plugin>
                <plugin>
                    <groupId>kr.motd.maven</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>1.0.0.Final</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>2.4.3</version>
                    <configuration>
                        <createDependencyReducedPom>false</createDependencyReducedPom>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>maven-jetty-plugin</artifactId>
                    <version>${maven_jetty_version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
